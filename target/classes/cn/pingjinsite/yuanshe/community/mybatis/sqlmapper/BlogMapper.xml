<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.pingjinsite.yuanshe.community.mybatis.mapper.BlogMapper" >
	
	<resultMap id="blogResultMap" type="cn.pingjinsite.yuanshe.community.mybatis.vo.BlogVo">
		<id property="id" column="id"/>
		<result property="url" column="url"/>
		<result property="title" column="title"/>
		<result property="thumbnail" column="thumbnail"/>
		<result property="resume" column="resume"/>
		<result property="classify" column="classify"/>
		<result property="createtime" column="createtime"/>
		<association property="user" javaType="cn.pingjinsite.yuanshe.usercenter.mybatis.vo.UserVo">
			<id property="id" column="userid"/>
			<result property="nickname" column="nickname"/>
			<result property="sex" column="sex"/>
			<result property="headImg" column="headImg"/>
			<result property="occupation" column="occupation"/>
			<result property="company" column="company"/>
			<result property="synopsis" column="synopsis"/>
		</association>
	</resultMap>
	
	<sql id="commonSql">
		SELECT
			blog.id AS id,
			blog.url AS url,
			blog.title AS title,
			blog.thumbnail AS thumbnail,
			classify.`name` AS classify,
			blog.resume AS resume,
			DATE_FORMAT(
				blog.createtime,
				'%Y-%m-%d %H:%i:%s'
			) AS createtime,
			blog.user_id AS userid,
			user_info.nickname AS nickname,
			user_info.sex AS sex,
			user_info.head_img AS headImg,
			user_info.occupation AS occupation,
			user_info.company AS company,
			user_info.synopsis AS synopsis
		FROM
			blog
		INNER JOIN user_info
		INNER JOIN classify ON blog.user_id = user_info.user_id
		AND blog.classify = classify.sign
	</sql>
	
  	<insert id="insertBlog" parameterType="cn.pingjinsite.yuanshe.community.mybatis.vo.BlogVo"
  		keyProperty="id" useGeneratedKeys="true">
  		INSERT INTO blog (
			user_id,
			url,
			title,
			thumbnail,
			resume,
			classify,
			createtime,
			audit,
			STATUS
		)
		VALUE
			(
				#{user.id},
				#{url},
				#{title},
				#{thumbnail},
				#{resume},
				#{classify},
				NOW(),
				0,
				1
			)
  	</insert>
  	
  	
  	<insert id="insertBlogStatistics">
  		INSERT INTO statistics (
			blog_id,
			`like`,
			collect,
			discuss,
			SHARE
		)
		VALUE
			(#{id}, 0, 0, 0, 0)
  	</insert>
  	
  	<select id="listBlog" resultMap="blogResultMap">
  		<include refid="commonSql"></include>
		WHERE
			blog.audit = 1
		AND blog.`status` = 1
		AND (
			blog.title LIKE CONCAT('%', #{query}, '%')
			OR blog.resume LIKE CONCAT('%', #{query}, '%')
		)
		<if test="classify != '' ">
			AND blog.classify = #{classify}
		</if>
		ORDER BY
			blog.createtime DESC
		LIMIT #{start},
		 #{pageSize}
  	</select>
  	
  	
  	<select id="listBlogCount" resultType="java.lang.Integer">
  		SELECT
			COUNT(*)
		FROM
			blog
		INNER JOIN user_info
		INNER JOIN classify ON blog.user_id = user_info.user_id
		AND blog.classify = classify.sign
		WHERE
			blog.audit = 1
		AND blog.`status` = 1
		AND (
			blog.title LIKE CONCAT('%', #{query}, '%')
			OR blog.resume LIKE CONCAT('%', #{query}, '%')
		)
		<if test="classify != '' ">
			AND blog.classify = #{classify}
		</if>
  	</select>
  	
  	
  	<select id="getBlog" resultMap="blogResultMap">
  		<include refid="commonSql"></include>
 		WHERE blog.id = #{id}
  	</select>
  	
  	<select id="getBlogStatus" resultType="java.lang.Integer">
  		SELECT
			STATUS
		FROM
			blog
		WHERE
			id = #{id}
  	</select>
  	
  	<select id="getBlogExtraVo" resultType="cn.pingjinsite.yuanshe.community.mybatis.vo.BlogExtraVo">
  		SELECT
			blog_id AS id,
			`like`,
			collect,
			discuss,
			SHARE AS share
		FROM
			statistics
		WHERE
			blog_id = #{id}
  	</select>
</mapper>